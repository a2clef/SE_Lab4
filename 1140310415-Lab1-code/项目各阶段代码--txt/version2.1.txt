package version21;
import java.util.*;

public class expression_subtraction {
	public static int[] value = new int[200];
	//public static boolean[] flag = new boolean[200];
	
	 public static void Ini()//clean value[]
	 {
		 for (int i = 0; i < 200; i++)
		 {
			 value[i] = 0;
		//	 flag[i] = false;
		 }
	 }
 	 public static String read()
	 {
		 Scanner in = new Scanner(System.in);
		 String input = in.nextLine();
		 return input;
	 }
	 public static int Judge(String input)
	 {
		 if (input.charAt(0) == '!') 
		 {
			 //System.out.println(input.substring(1,9));
			 if (input.substring(1, 4).equals("d/d"))
				 return 1;//求导
			 else if (input.substring(1, 9).equals("simplify")) 
				 return 0;//赋值
			 else
			 {
				 return 3;//Error
			 }
		 }
		 else return 2;//表达式
	 }
	 public static boolean Isnumber(char a)
	 {
		 if (a >= '0' && a <= '9') return true;
		 else return false;
	 }
	 public static boolean Isletter(char a)
	 {
		 if ((a >= 'A' && a <= 'Z') || (a >= 'a' && a <= 'z')) return true;
		 else return false;
	 }
	 public static boolean Issymbol(char a)
	 {
		 if (a=='+' || a=='*' || a=='-')
			 return true;
		 else return false;
	 }
	 public static boolean JudgeFun(String fun)
	 {
		 
		 int cnt_num = 0, cnt_letter=0, cnt_symbol=0;
		 char a = '*';
		 //return true;
		 for (int i = 0; i < fun.length(); i++)
		 {
			 a = fun.charAt(i);
			 if (Isnumber(a)) 
			 {
				 cnt_num++;
				 cnt_letter=0;
				 cnt_symbol=0;
			 }
			 else if (cnt_letter == 0 && Isletter(a))
			 {
				 cnt_letter++;
				 cnt_num=0;
				 cnt_symbol=0;
			 }
			 else if(cnt_symbol == 0 && Issymbol(a))
			 {
				 cnt_symbol++;
				 cnt_num=0;
				 cnt_letter=0;
			 }
			 return true;
			 //else return false;
		 }
		 return true;
	 }
	 public static String Simplify(String input, String fun)
	 {
		 Ini();
		 String[] count = input.split(" ");
		 int num = count.length;
		 String[] var = new String[num-1];
		 for (int i = 1; i < num; i++)
		 {
			 var[i-1] = GetVarStr(count[i],0);			 
			 int len = count[i].length();
			 String n = count[i].substring(var[i-1].length()+1, len);
			 int v = Integer.parseInt(n);
			 value[i-1] = v;
		 }
		 String new_s = "";
		 String x = "";
		 for (int i = 0; i < fun.length(); i++)
		 {
			 if (Isletter(fun.charAt(i)))
			 {
				 x = GetVarStr(fun,i);
				 boolean havevalue=false;
				 for (int j = 0; j < num-1; j++)
				 {
					 if (x.equals(var[j])){
						 new_s = new_s + value[j];
						 havevalue=true;
						 break;
					 }				 
				 }
				 if (havevalue==false) new_s = new_s + x;
				 i = i+x.length()-1;
			 }else
				 new_s = new_s + fun.charAt(i);
		 }
		 return new_s;
	 }
	 public static String MergeMul(String input)
	 {
		 String new_s = "";
		 String sub = "";
		 int Mul=1;
		 for (int i = 0; i < input.length(); i++)
		 {
			 if (Isnumber(input.charAt(i)))
			 {
				 sub = GetNumStr(input,i);
				 int num = Integer.parseInt(sub);
				 Mul *= num;				 
			 }
			 else if (Isletter(input.charAt(i)))
			 {
				 sub = GetVarStr(input,i);
				 new_s = new_s + '*' + sub;
			 }else
				 sub = "*";
			 i = i+sub.length()-1;
		 }
		 if (Mul!=1)
			 new_s = Mul + new_s;
		 else if (new_s.length()<=1)
			 new_s = "1";
		 else
			 new_s = new_s.substring(1,new_s.length());
		 return new_s;
	 }
	 public static int havevar(String input)
	 {
		 for (int i = 0; i < input.length(); i++)
		 {
			 if (Isletter(input.charAt(i))){
				 return 1;
			 }
		 }
		 return 0;
	 }
	 public static String MergeSub(String input)
	 {
		 int sum = 0;
		 String[] count = input.split("\\-");
		 String temp = "", new_s = "";
		 for (int i = 0; i < count.length; i++)
		 {
			 if (count[i].length()==0) continue;
			 temp = MergeMul(count[i]);
			 if (havevar(temp)==0){
				 if (i!=0){
					 sum -= Integer.parseInt(temp);
				 }else
					 sum += Integer.parseInt(temp);
			 }else{
				 if (i!=0)
					 new_s = new_s + '-' + temp;
				 else
					 new_s = temp;
			 }	
/*			 System.out.print(temp);
			 System.out.print(' ');
			 System.out.println(new_s);*/
		 }
		 if (Issymbol(new_s.charAt(0))==false)
			 new_s = '+' + new_s;
		 if (sum != 0)
			 new_s = sum+new_s;
		 else if (new_s.length() == 1)
			 new_s = "0";
		// else
		//	 if (new_s.charAt(0)!='-')
		//		 new_s = new_s.substring(1,new_s.length());
		 System.out.print("MergeSub: ");System.out.println(new_s);
		 return new_s;
	 }
	 public static String MergePlus(String input)
	 {
		 String[] count = input.split("\\+");
		 String temp = "", new_s="";
		 int sum=0;
		 String numstr = "";
		 //System.out.println(input);
		 for (int i = 0; i < count.length; i++)
		 {
			 temp = MergeSub(count[i]);
			 //System.out.print("temp:　");System.out.println(temp);
			 if (havevar(temp)==0){
				 sum += Integer.parseInt(temp);
			 }else if (temp.charAt(0)=='-'){
				 if (Isnumber(temp.charAt(1))){
					 numstr = GetNumStr(temp,1);
					 int j = numstr.length()+1;
					 if (temp.charAt(j)=='-'){
						 sum -= Integer.parseInt(numstr);
						 new_s = new_s + temp.substring(j);
					 }else if (temp.charAt(j)=='+'){
						 sum += Integer.parseInt(numstr);
						 new_s = new_s + temp.substring(j);
					 }else
						 new_s = new_s + '+' + temp;
				 }else{
					 new_s = new_s + temp;
				 }
			 }else if (Isnumber(temp.charAt(0))){
				 numstr = GetNumStr(temp,0);
				 int j = numstr.length();
				 if (temp.charAt(j)=='-'){
					 sum += Integer.parseInt(numstr);
					 new_s = new_s + temp.substring(j);
				 }else
					 new_s = new_s + '+' + temp;
			 }else
				 new_s = new_s + '+' + temp;
			 System.out.print("new_s: ");System.out.println(new_s);
			 System.out.print("sum: ");System.out.println(sum);
		 }
		 if (sum != 0)
			 new_s = sum+new_s;
		 else if (new_s.length() <= 1)
			 new_s = "0";
		 else
			 if (new_s.charAt(0)!='-')
				 new_s = new_s.substring(1,new_s.length());
		 System.out.print("MergePlus: ");System.out.println(new_s);
		 return new_s;
	 }
	 public static int havex(String input, String x)
	 {
		 int cnt = 0;
		 String var = "";
		 for (int i = 0; i < input.length(); i++)
		 {
			 if (Isletter(input.charAt(i))){
				 var = GetVarStr(input,i);
				 if (x.equals(var)){
					 cnt++;
				 }
				 i = i+var.length()-1;
			 }
		 }
		 return cnt;
	 }
	 public static String GetNumStr(String input, int i)
	 {
		 int j = i + 1;
		 for (; j < input.length() && Isnumber(input.charAt(j)); j++);
		 return input.substring(i,j);
	 }
	 public static String DerivationSub(String input, String x)
	 {
		 if (havex(input,x)==0) return "0";
		 String new_s = "", str="";
		 String[] count = input.split("\\-");
		 int sum = 0;
		 String temp="", numstr="", sub="";
		 for (int i = 0; i < count.length; i++)
		 {
			 int mul=1;
			 int cal=0;
			 temp = "";
			 numstr = "1";
			 new_s = "";
			 cal = havex(count[i], x);
			 if (cal != 0)
			 {
				 temp = MergeMul(count[i]);
				 int k = 0;
				 if (Isnumber(temp.charAt(0))){
					 numstr = GetNumStr(temp, 0);
					 k = numstr.length();
				 }
				 for (int j = k; j < temp.length();j++)
				 {
					 if (Isletter(temp.charAt(j))){
						 sub = GetVarStr(temp,j);
						 if (sub.equals(x) != true) 
						 	 new_s = new_s + '*' + sub;
						 j = j+sub.length()-1;
					 }
				 }
			 }
			 mul *= Integer.parseInt(numstr)*cal;
			 new_s = mul + new_s;
			 for (int j = 0; j < cal-1; j++)
			 {
				 new_s = new_s + '*' + x;
			 }			 
			 str = str + '-' + new_s;
		 }		 
		 str = str.substring(1, str.length());
		 System.out.println(str);
		 str = MergePlus(str);
		 System.out.print("MergePlus: ");
		 System.out.println(str);
		 System.out.println();
		 return str;		 
	 }
	 public static String Derivation(String input, String x)
	 {
		 if (havex(input,x)==0) return "0";
		 String new_s = "", str="";
		 String[] count = input.split("\\+");
		 int sum = 0;
		 String temp="", numstr="", sub="";
		 for (int i = 0; i < count.length; i++)
		 {
			 int mul=1;
			 int cal=0;
			 temp = "";
			 numstr = "1";
			 new_s = "";
			 cal = havex(count[i], x);
			 if (cal != 0)
			 {
				 temp = DerivationSub(count[i], x);
				 str = str + '+' + temp;
				 System.out.println(temp);
			 }
		 }		 
		 if (str.charAt(0)=='+')
			 str = str.substring(1);
		 //System.out.println(str);
		 str = MergePlus(str);
		 return str;
	 }
	 public static String GetVarStr(String input, int i)
	 {
		 int j = i + 1;
		 for (;j < input.length() && Isletter(input.charAt(j)); j++);
		 return input.substring(i,j);
	 }
	 public static void main(String args[])
	 {
		Ini();
		String fun = "", new_s = "";
		while (true)
		{
			String s = read();
			
			int x = Judge(s);
			if (x == 2) 
			{
				if (JudgeFun(s) == false)
				{
					System.out.println("Error, wrong expression!");
					continue;
				}
				fun = s;
				System.out.println(fun);
			}
			else if (x == 0)
			{
				new_s = Simplify(s, fun);
				System.out.println(new_s);
				new_s = MergePlus(new_s);
				System.out.println(new_s);
			}
			else if (x == 1)
			{
				String variable = GetVarStr(s, 5);
				new_s = Derivation(fun, variable);
				System.out.println(new_s);
			}
			else if (x == 3)
			{
				System.out.println("Error, wrong input!");
			}
		}
	 }
}
